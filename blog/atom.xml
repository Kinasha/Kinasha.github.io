<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.kinasha.github.com/blog</id>
    <title>Kinasha 的个人博客 Blog</title>
    <updated>2023-03-20T02:10:01.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://www.kinasha.github.com/blog"/>
    <subtitle>Kinasha 的个人博客 Blog</subtitle>
    <icon>https://www.kinasha.github.com/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[优秀工程师和卓越工程师的区别]]></title>
        <id>/优秀工程师和卓越工程师的区别</id>
        <link href="https://www.kinasha.github.com/blog/优秀工程师和卓越工程师的区别"/>
        <updated>2023-03-20T02:10:01.000Z</updated>
        <summary type="html"><![CDATA[本文是对这篇文章的摘录]]></summary>
        <content type="html"><![CDATA[<p>本文是对<a href="https://www.intercom.com/blog/traits-of-exceptional-engineers/" target="_blank" rel="noopener noreferrer">这篇文章</a>的摘录</p><ol><li>雄心勃勃，意志坚定<ul><li>梦想远大、推动自己和团队取得更大成就</li><li>成长心态，渴望新挑战，在挫折面前坚持不懈，视努力为通往精通的途径、从批评中学习，从他人的成功中受启发。</li></ul></li><li>习惯性简化<ul><li>让代码更简单、更清晰更容易被维护。</li><li>帮助团队这么做。</li><li>对技术发展方向有长期愿景，并且感到兴奋。</li><li>写出人类可以理解的代码</li></ul></li><li>快速调试任何东西<ul><li>避免迷信</li><li>不断缩小问题可能发生的范围</li><li>重现问题</li><li>了解崩溃原因，避免下一次出现类似的问题</li><li>调试问题是挑战，是一个学习的机会</li></ul></li><li>帮助其他人成为更伟大的人<ul><li>每个人的都想与之共事</li><li>从帮助其他人中获得快乐。</li><li>培养团队</li><li>不会大惊小怪地生气</li><li>坚持高标准、善待程序员而不是代码</li></ul></li><li>知道什么事有价值<ul><li>判断什么时候什么事情是最有价值的</li><li>以客户为中心，而不仅仅是技术</li><li>确保自己正在解决最有价值的事情</li></ul></li><li>富有创造力而且积极向上<ul><li>在陷入困境时，给每个人勇气和希望</li><li>领导者而不是受害者</li><li>鼓励可能性，而不是说行不通，理解问题所在和有价值的东西，为他人提供选择。</li><li>态度积极、怀疑论相平衡。</li></ul></li></ol>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023/w11]]></title>
        <id>/2023/w11</id>
        <link href="https://www.kinasha.github.com/blog/2023/w11"/>
        <updated>2023-03-18T11:40:30.000Z</updated>
        <summary type="html"><![CDATA[1. 2023 年应该学会的 6 个 CSS 技巧]]></summary>
        <content type="html"><![CDATA[<ol><li><a href="https://web.dev/6-css-snippets-every-front-end-developer-should-know-in-2023/" target="_blank" rel="noopener noreferrer">2023 年应该学会的 6 个 CSS 技巧</a><ul><li>container query</li><li>scroll snap</li><li>avoid <code>position: absolute</code> with grid</li><li>swiftly hammer out a circle</li><li>use cascade layers</li><li>reach more with less via logical properties</li></ul></li><li><a href="https://codesandbox.io/s/drag-drop-6x503l" target="_blank" rel="noopener noreferrer">使用 react-beautiful-dnd</a></li></ol>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023/w10]]></title>
        <id>/2023/w10</id>
        <link href="https://www.kinasha.github.com/blog/2023/w10"/>
        <updated>2023-03-12T12:26:53.000Z</updated>
        <summary type="html"><![CDATA[开发技巧]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="开发技巧">开发技巧<a class="hash-link" href="#开发技巧" title="标题的直接链接">​</a></h2><ol><li>异步并发控制。在发请求的时候，需要考虑同时发送所有请求对于后端的压力，前端如果可以实现并发控制的话，建议还是做一下。</li></ol><p>可以用 <a href="https://github.com/rxaviers/async-pool" target="_blank" rel="noopener noreferrer">async-pool</a> 实现。
2. 用 cron-tab 管理本地的日常任务。 </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="开阔视野">开阔视野<a class="hash-link" href="#开阔视野" title="标题的直接链接">​</a></h2><ol><li></li></ol>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023/W9]]></title>
        <id>/2023/W9</id>
        <link href="https://www.kinasha.github.com/blog/2023/W9"/>
        <updated>2023-03-06T03:45:31.000Z</updated>
        <summary type="html"><![CDATA[想写一些技术之外的东西。]]></summary>
        <content type="html"><![CDATA[<p>想写一些技术之外的东西。</p><p>这一周结合自己之前学过的 <code>bunchee</code> 和 <code>release-it</code> 从零创建了一个二方库。回过头来似乎没什么，但是自己从中收获到的成就感很大。不断地使用</p><p>这周还通过 zsh 的 nvm 插件实现了之前想要的根据项目 <code>.nvmrc</code> 自动切换 node 版本的功能，忽然间好奇 nvm 中的那段 bash 到底什么意思。</p><p>通过 crontab 自动化了博客的推送脚本，回想起最开始写博客，独立去仓库编辑，到使用软连接到 Obsidian 获取更好的编辑体验，再到现在使用脚本自动推送。这些都是很细碎的知识，但是的确很提升我的效率、让我很开心。</p><p>这周还和 rj 看了两部电影，（其实是三部、巴比伦没看下去）周末真的很放松。整个人都 chill 下来了。</p><p>下周好好努力，🤠。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023/w7]]></title>
        <id>/2023/w7</id>
        <link href="https://www.kinasha.github.com/blog/2023/w7"/>
        <updated>2023-02-28T06:04:48.000Z</updated>
        <summary type="html"><![CDATA[这一周太忙于写业务代码，基本搞定了简单组件的 C2D 。]]></summary>
        <content type="html"><![CDATA[<p>这一周太忙于写业务代码，基本搞定了简单组件的 C2D 。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="开发技巧">开发技巧<a class="hash-link" href="#开发技巧" title="标题的直接链接">​</a></h2><ol><li></li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="开阔视野">开阔视野<a class="hash-link" href="#开阔视野" title="标题的直接链接">​</a></h2><ol><li></li></ol>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023/W8]]></title>
        <id>/2023/W8</id>
        <link href="https://www.kinasha.github.com/blog/2023/W8"/>
        <updated>2023-02-26T11:53:43.000Z</updated>
        <summary type="html"><![CDATA[开发技巧]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="开发技巧">开发技巧<a class="hash-link" href="#开发技巧" title="标题的直接链接">​</a></h2><ol><li>各个包管理器之间的差异和演化过程。</li></ol><p>参考链接：</p><ul><li><a href="https://blog.logrocket.com/javascript-package-managers-compared/#monorepo-support" target="_blank" rel="noopener noreferrer">JavaScript 包管理器比较：npm、Yarn 或pnpm</a></li><li><a href="https://classic.yarnpkg.com/lang/en/docs/workspaces/" target="_blank" rel="noopener noreferrer">Yarn 官网有关 workspace 的介绍</a></li></ul><p>总结：monorepo （单体仓库）用于解决多个项目之间相互调用、存在大量重复依赖的问题。</p><p>当项目（Project）中相互调用时，通常情况下我们会将需要修改的包 yarn link 到本地，在本地修改再推送到 npm 服务器，这样的开发挺麻烦的，所以通过单体仓库管理，项目之间通过软连接到本地，直接进行修改不用 link 。</p><p>当多个项目之间存在大量重复依赖，使用单体仓库管理可以将依赖提升到工作区根目录，这样做的好处有两点：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">1. 可以节约磁盘空间，提高依赖安装速度。因为同样的依赖只会被安装一次</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">2. 通过工作区根目录的 yarn-lock 文件统一管理，减小依赖之间产生冲突的可能性。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="2"><li>bunchee 一个基于 Rollup 的零配置打包库，支持 ts、jsx。</li></ol><p>在开发库的时候，用 webpack 、vite 太重。使用一些轻量的打包工具挺有必要的。bunchee 就是这样一个库打包工具。主打的就是一个轻量。</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"main"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"dist/pkg.cjs.js"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"module"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"dist/pkg.esm.js"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"scripts"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"build"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"bunchee ./src/index.js"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"types"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"dist/types/index.d.ts"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>在 <code>package.json</code> 中配置好 <code>main</code> 和 <code>module</code> 字段，前者是 commonJs 规范的代码入口，后者是 ESM 规范的代码入口。</p><p>也可以通过 <code>exports</code> 字段声明：</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"exports"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"require"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"dist/index.cjs"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"import"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"dist/index.mjs"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"module"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"dist/index.esm.js"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">"scripts"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"build"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"bunchee ./src/index.js"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023/W6]]></title>
        <id>/2023/W6</id>
        <link href="https://www.kinasha.github.com/blog/2023/W6"/>
        <updated>2023-02-11T06:53:05.000Z</updated>
        <summary type="html"><![CDATA[开发技巧]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="开发技巧">开发技巧<a class="hash-link" href="#开发技巧" title="标题的直接链接">​</a></h2><ol><li>TypeScript 相关
非空断言符号。</li></ol><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">doSoemthing</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">el</span><span class="token operator" style="color:#393A34">:</span><span class="token builtin">string</span><span class="token operator" style="color:#393A34">|</span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">el</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> ch </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> el</span><span class="token operator" style="color:#393A34">!</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">charAt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>DTS 文件
为了避免在所有的 ts 文件中显示地引入类型，可以在 DTS 文件声明全局类型。需要强调的是，不要在 DTS 文件中使用 <code>import/export</code> 这会让 ts compiler 将其视作为一个模块。
如果作为全局模块定义的 DTS 文件中确实需要引入第三方的模块定义，可以使用命名空间语法</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">declare</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">module</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'React'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> React </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'react'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">Option</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  optionValues</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  propValues</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Record</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">unknown</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">TestMeta</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  component</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> React</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">FunctionComponent</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  api</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  design</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  version</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dimension</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Record</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Option</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  variables</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Record</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Option</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  initialChildren</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> React</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ReactNode</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  initialProps</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Record</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">unknown</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="2"><li>bash
杀死指定端口号的进程</li></ol><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">lsof</span><span class="token plain"> -nti:NumberOfPort </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">xargs</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">kill</span><span class="token plain"> -9</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>可以将它封装成为一个 bash 函数</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">funtion killbyport(){</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    lsof -nti:$1 |xargs kill -9</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>顺带一提，bash 的函数没有形参
3. useMemo 和 memo 本身就应该搭配使用</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="开阔视野">开阔视野<a class="hash-link" href="#开阔视野" title="标题的直接链接">​</a></h2><ol><li><p>Verdaccio
A lightweight Node. js private proxy registry ，可以用作私有 npm 源
<a href="https://verdaccio.org/" target="_blank" rel="noopener noreferrer">https://verdaccio.org/</a></p></li><li><p>Tresjs 用 vue 写 three. js
<a href="https://tresjs.org/guide/" target="_blank" rel="noopener noreferrer">https://tresjs.org/guide/</a>
<img loading="lazy" src="https://p5.music.126.net/obj/wo3DlcOGw6DClTvDisK1/24785777102/f857/916f/8176/09cd72171b5d406b91279588258f4593.png" alt="image.png" class="img_ev3q"></p></li><li><p><a href="https://icons8.com/" target="_blank" rel="noopener noreferrer">icon8</a>
图标和设计工具的平台
<img loading="lazy" src="https://p5.music.126.net/obj/wo3DlcOGw6DClTvDisK1/24785845428/a665/ad32/6a91/a80f72b4732f459e570bc7d93e90440f.png" alt="image.png" class="img_ev3q"></p></li><li><p><a href="https://www.val.town/" target="_blank" rel="noopener noreferrer">Val. Town</a>
<img loading="lazy" src="https://p5.music.126.net/obj/wo3DlcOGw6DClTvDisK1/24785883271/e305/d24d/ea40/584aa6001bdb8291d5f209035a0b359e.png" alt="image.png" class="img_ev3q"></p></li></ol><p>分发用户 Script 的平台</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023/W5]]></title>
        <id>/2023/W5</id>
        <link href="https://www.kinasha.github.com/blog/2023/W5"/>
        <updated>2023-02-05T03:17:11.000Z</updated>
        <summary type="html"><![CDATA[开发技巧]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="开发技巧">开发技巧<a class="hash-link" href="#开发技巧" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-npm-使用别名">1. npm 使用别名<a class="hash-link" href="#1-npm-使用别名" title="标题的直接链接">​</a></h3><p>在项目中使用<strong>别名</strong>的方式，安装同一个 npm 包的不同版本</p><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">npm install &lt;alias&gt;@npm:&lt;name&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" src="https://p5.music.126.net/obj/wo3DlcOGw6DClTvDisK1/24594903515/ab3c/016b/b4ab/268bc1a2888e53d6c91a3d9a95cd0bb6.png" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-react-的错误边界">2. react 的错误边界<a class="hash-link" href="#2-react-的错误边界" title="标题的直接链接">​</a></h3><p>为项目添加 <strong>错误边界</strong> ，能够在界面 crash 后自定义崩溃的兜底页面，提供更好的 UX。
<img loading="lazy" src="https://p5.music.126.net/obj/wo3DlcOGw6DClTvDisK1/24595027481/015c/0460/8441/5fd20932b322d550ea1ee2305f35dd82.png" alt="image.png" class="img_ev3q"></p><p> <a href="https://beta.reactjs.org/reference/react/Component#catching-rendering-errors-with-an-error-boundary" target="_blank" rel="noopener noreferrer">官方文档</a></p><p>我个人更推荐使用 <code>react-error-boundary</code> 库，它提供了错误边界的简单封装，支持作为组件引入和作为高阶函数（HOC）引入。</p><blockquote><p>语言的真正强大之处, 并不在于语言本身，而是其生态。</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-查看常见库的替代品">3. 查看常见库的替代品<a class="hash-link" href="#3-查看常见库的替代品" title="标题的直接链接">​</a></h3><p><a href="https://www.libhunt.com/" target="_blank" rel="noopener noreferrer">https://www.libhunt.com/</a> 这个网站能够输入的库名对应的替代开源项目。非常适合在老项目改造过程中使用。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-如何批量自定义文件导出">4. 如何批量自定义文件导出<a class="hash-link" href="#4-如何批量自定义文件导出" title="标题的直接链接">​</a></h3><p>webpack 中的 <code>require.context</code> 方法能够将特定文件夹下的文件，按照自定的方法导出。
<a href="https://gist.github.com/Kinasha/e357d9b3d48c8b2f259205908888804a" target="_blank" rel="noopener noreferrer">举个 🌰</a></p><p>我们希望 <code>Components</code> 文件夹下的文件都已 <code>大驼峰</code> 的格式导出，并添加指定前缀。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="5-vscode-扩展">5. vscode 扩展<a class="hash-link" href="#5-vscode-扩展" title="标题的直接链接">​</a></h3><p><a href="https://yeoman.io/" target="_blank" rel="noopener noreferrer">yeoman</a> 一个搭建 vscode 扩展的脚手架</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="6-figma-中创建-component">6. figma 中创建 Component<a class="hash-link" href="#6-figma-中创建-component" title="标题的直接链接">​</a></h3><p>figma 中如何创建具有多个 prop 的 Component ？
首先将其变体统统罗列出来（复制）然后选中，点击 combine as variants 这样就能得到新的 「组件」。
具体可见：<a href="https://youtu.be/y29Xwt9dET0" target="_blank" rel="noopener noreferrer">Youtube</a>
这其中暗藏一个小<strong>规则</strong>：这些变体的名称可以用来快速创建 prop 的值。</p><ul><li><code>v1,v2</code>  会被转化成 <code>property1=v1, property2=v2</code>；</li><li><code>k1=v1,k2=v2</code> 会被转化成 <code>k1=v1,k2=v2</code> （默认为字符串类型）</li><li><code>k1=true,k2=v2</code> ，k1 会被识别为布尔类型。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="工具推荐">工具推荐<a class="hash-link" href="#工具推荐" title="标题的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="--vscode-插件-gistpad">- vscode 插件 GistPad<a class="hash-link" href="#--vscode-插件-gistpad" title="标题的直接链接">​</a></h3><p>github 的 gist 功能是用于存放和分享代码片段的平台。GistPad 能够在 IDE 中访问 github gist ，从而更好地使用这些代码片段，个人觉得非常方便。<img loading="lazy" src="https://p5.music.126.net/obj/wo3DlcOGw6DClTvDisK1/24595542076/abcd/2999/9c9b/e3b9b835b5ab0a316bcff52df0089de5.png" alt="image.png" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="--chorme-的-snippet">- Chorme 的 snippet<a class="hash-link" href="#--chorme-的-snippet" title="标题的直接链接">​</a></h3><p>类似 gist ，如果你经常在 Chrome console 里输入一些重复的指令。可以考虑将他们创建为 Chrome console snippets 从而更好地调用，
<img loading="lazy" src="https://p5.music.126.net/obj/wo3DlcOGw6DClTvDisK1/24595617816/fd12/3d54/089c/1fd5ca1fda207553dd4677df20b813c6.png" alt="image.png" class="img_ev3q">
<img loading="lazy" src="https://p5.music.126.net/obj/wo3DlcOGw6DClTvDisK1/24595644886/a765/1e4e/70e8/070a50604dbaf6d3682d13c2f9fcd594.png" alt="image.png" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="--alfred-的-workflow">- Alfred 的 workflow<a class="hash-link" href="#--alfred-的-workflow" title="标题的直接链接">​</a></h3><p><a href="https://github.com/alexchantastic/alfred-open-with-vscode-workflow" target="_blank" rel="noopener noreferrer">地址</a>
<img loading="lazy" src="https://p5.music.126.net/obj/wo3DlcOGw6DClTvDisK1/24595691854/87a2/3c2b/4f1a/68c5f2dd81ea1db5b79db16862c9b5fa.png" alt="image.png" class="img_ev3q"></p><p>如果你和我一样，需要在多个文件夹下切换打开 vscode，可以试试这个 workflow ，能够大大节约打开仓库的时间。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2022 年终总结]]></title>
        <id>/2022 年终总结</id>
        <link href="https://www.kinasha.github.com/blog/2022 年终总结"/>
        <updated>2023-01-24T02:22:19.000Z</updated>
        <summary type="html"><![CDATA[这是我的第一篇年终总结。写年终总结的起因是关注的不少前辈都在前些日子发了 2022 总结。看着他们写下的内容，我也希望五年后的自己回忆此时能有更多详实的记录。]]></summary>
        <content type="html"><![CDATA[<p>这是我的第一篇年终总结。写年终总结的起因是关注的不少前辈都在前些日子发了 2022 总结。看着他们写下的内容，我也希望五年后的自己回忆此时能有更多详实的记录。
这一年我完成了从学生到正式打工人的转换。毕业旅行，从福建出发，广州、常德、桂林、长沙。第一次去长隆野生动物园、第一次坐竹筏顺遇龙江而下、第一次骑马绕山、第一次吃生蚝锅<s>到急性肠胃炎</s>哈哈哈哈 …… 有很多尴尬又幸福的第一次。</p><p>在工作上，今年最大的收获是顺利在网易云前端架构组转正。说实话，能够调岗到架构组是我转码路上最幸运的事情 —— 我的工作没有那么的忙，而且总能在其中学到不少通用的知识。回忆起腾讯实习时那种被需求压得喘不过气的感觉，我觉得当下的节奏很舒适很适合我。放弃了字节和美团的 offer 也未必不是失之东隅收之桑榆。
但仍有不足，我总结最关键的一点是：动手能力还有欠缺。想法多，但付诸实践的少，往往是在答辩前才临时准备一下。今年也有做得好的地方：</p><ul><li>早起（7：30）起床。起因自看到的 5am-club 早起背五十个单词让大脑活跃起来，随后去公司有一个多小时完全属于自己的学习时间。我往往会刷一会推，看到感兴趣的项目会去翻翻他们的 github 。</li><li>做好记录。工具学习大法好，折腾 obsidian 相关的配置后用沉没成本逼迫自己每天记录反思和收获。自省让我更加了解自己的状态，那种高中晚自习难熬的感受很少会体会到了。</li></ul><p>打工人应该将自己打造成一间公司。我习得的所有技能都是这间公司的产品。维持好这个公司的良性循环是我的责任。落到细节上，我今年开始有意识地打造自己的学习和工作流。探索最适合自己的学习流（工具+方法）。目前的结论是：在明确自己为什么要学这个东西之后，首先看视频有一个大致的印象（或是动手实验）这个阶段一定要做笔记，但是不必过分深究原因。然后找专业的书籍看（感谢微信读书，帮我省下不少买书钱）。最后做一个 demo 验证自己的学习成果。通过此方法我学习了 webpack 。正在学 svg 和 babel。</p><p>在生活上，今年主动结束了一段长期关系。自己这一年成熟很多，读了几本心理学相关的书。渐渐放下了以前的一些执念。摘录一些让我醍醐灌顶的观点：</p><ul><li>谁痛苦谁改变。</li><li>无条件的爱存在，但仅限是自己对自己的爱。</li><li>拖延的本质是不熟悉。</li><li>不必在意凝视。</li></ul><p>自己不太会处理亲密关系，不太会社交，不能很好地控制自己的情绪。这是我的缺点，试图去掩盖、粉饰这些事情没有意义。成熟的人要对自己负责，而不是一味地归咎于他人。既然我感觉到痛苦，那就做出改变好了。粗浅地了解了下阿德勒的一些观点。</p><p>今年看的书和电影相对往年较少。让我收获最大的书是《分手心理学》、《超越自卑》。今年最喜欢的电影是《西线无战事》。比如书和电影，今年让我有更大感触</p><p>总体来说，今年的关键词是学习和成长。学习工作需要掌握的技能、方法，成长为一个合格的打工人。在高考结束后，曾有一个愿望 『要成为对他人温柔、对自己勇敢、不会说谎的大人』。虽然有些二次元啦，但是真诚地希望五年后的自己能够做到。</p>]]></content>
        <author>
            <name>Kinasha</name>
        </author>
    </entry>
</feed>